<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.ehcache.org/v3"
        xsi:schemaLocation="
            http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core-3.0.xsd">
    <cache alias="squareCache">
        <key-type>java.lang.Long</key-type>
        <value-type>java.math.BigDecimal</value-type>
        <expiry>
            <ttl unit="seconds">30</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <heap unit="entries">2</heap> <!-- heap은 JVM 힙 메모리에 캐시를 저장하도록 세팅하는 요소이다. -->
        </resources>
    </cache>

    <cache alias="taskCache">
        <key-type>org.springframework.cache.interceptor.SimpleKey</key-type> <!-- 만약에 캐시의 키로 지정할 것이 없을 때 내부적으로 자동으로 키를 생성하여 지정하도록 설정하는 값 -->
        <value-type>java.util.List</value-type>
        <expiry>
            <ttl unit="seconds">30</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <offheap unit="MB">10</offheap> <!-- offheap은 JVM 힙 메모리 외부의 메모리에 캐시를 저장하도록 세팅하는 요소이다. 이를 위해서는 외부 메모리에 저장할 캐시 데이터(객체)가 정규화(Serializable)되어 있어야 한다. -->
        </resources>
    </cache>

    <cache alias="taskByUserIdCache">
        <key-type>java.lang.Integer</key-type>
        <value-type>java.util.List</value-type>
        <expiry>
            <ttl unit="seconds">30</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <offheap unit="MB">10</offheap>
        </resources>
    </cache>

    <cache alias="hrListCache">
        <key-type>org.springframework.cache.interceptor.SimpleKey</key-type>
        <value-type>java.util.List</value-type>
        <expiry>
            <ttl unit="minutes">3</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <heap unit="entries">10</heap><!-- entries는 항목이다. 2로 설정했으면 총 2개의 항목을 힙에 저장할 수 있다는 뜻. 만약 entries 수를 넘어가면 가장 예전에 저장했던 캐시부터 1개씩 삭제하면서 새로운 캐시를 저장한다. -->
        </resources>
    </cache>

    <cache alias="hrListByDepartmentCache">
        <key-type>java.lang.String</key-type>
        <value-type>java.util.List</value-type>
        <expiry>
            <ttl unit="minutes">3</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <heap unit="entries">10</heap>
        </resources>
    </cache>

    <cache alias="hrByDepartmentCache">
        <key-type>org.springframework.cache.interceptor.SimpleKey</key-type>
        <value-type>java.util.Map</value-type>
        <expiry>
            <ttl unit="minutes">3</ttl>
        </expiry>

        <listeners>
            <listener>
                <class>com.example.ehcache.demo.config.CacheEventLogger</class>
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <heap unit="entries">10</heap> <!-- entries는 항목이다. 2로 설정했으면 총 2개의 항목을 힙에 저장할 수 있다는 뜻. 만약 entries 수를 넘어가면 가장 예전에 저장했던 캐시부터 1개씩 삭제하면서 새로운 캐시를 저장한다. -->
        </resources>
    </cache>

</config>